#!/bin/sh

SS_CONFIG_FILE=/mnt/jffs2/hw/ss.json
SS_REDIR_BIN=/mnt/jffs2/app/shadowsocks-libev-2.6.3/ss-redir
SS_TUNNEL_BIN=/mnt/jffs2/app/shadowsocks-libev-2.6.3/ss-tunnel
SS_LOCAL_BIN=/mnt/jffs2/app/bin/ss-local-3.3.5
GFW_FILE_PATH=/mnt/jffs2/hw/etc/gfw-nat


SERVER_IP=`cat $SS_CONFIG_FILE |grep '"server"' | awk  -F '"' '{print $4}'`


mkdir -p /var/run/

if [ ! -e /var/run/ss-redir.pid ] ;then

	sleep 60
	
	# create new nat table
	iptables -t nat -N SHADOWSOCKS
	
	# set iptables rule
	iptables -I INPUT -s 127.0.0.1/8 -p tcp --dport 1234 -j ACCEPT
	iptables -I INPUT -s 192.168.1.1/24 -p tcp --dport 1234 -j ACCEPT
	iptables -I INPUT -s 127.0.0.1/8 -p tcp --dport 5300 -j ACCEPT
	iptables -I INPUT -s 192.168.1.1/24 -p tcp --dport 5300 -j ACCEPT
        iptables -I INPUT -s 192.168.1.1/24 -p tcp --dport 1080 -j ACCEPT
	
	echo 3 > /proc/sys/net/ipv4/tcp_fastopen


else 
	
	kill `pidof ss-redir`
	kill `pidof ss-tunnel`
	kill `pidof dns-forwarder`
#        kill `pidof ss-local`

	rm -rf /var/run/ss-redir.pid
	rm -rf /var/run/ss-tunnel.pid

fi



#redir tunnel
$SS_REDIR_BIN -c $SS_CONFIG_FILE -b 192.168.1.1 -l 1234 -f /var/run/ss-redir.pid
$SS_TUNNEL_BIN -c $SS_CONFIG_FILE -b 127.0.0.1 -l 5353  -L 127.0.0.1:53 -f /var/run/ss-tunnel.pid
#$SS_LOCAL_BIN  -c $SS_CONFIG_FILE -l 1080 -b 192.168.1.1 -f /var/run/ss-local.pid

# dns forward
/mnt/jffs2/app/bin/dns-forwarder -b 127.0.0.1 -p 5300 -s 127.0.0.1:5353 &

# flash nat table
iptables -t nat -F SHADOWSOCKS

# gfw list ip
iptables-restore --table=nat  < $GFW_FILE_PATH

# server ip
iptables -t nat -I SHADOWSOCKS -d $SERVER_IP -j RETURN
iptables -I FORWARD -d $SERVER_IP -j ACCEPT

# redirect all 80/443 packets to 1234 port
iptables -t nat -A SHADOWSOCKS -p tcp -j REDIRECT --to-ports 1234
iptables -t nat -I PREROUTING -p tcp -m multiport --dports 80,443 -j SHADOWSOCKS

# netflix dns fix
iptables -t nat -N NETFLIX
iptables -t nat -A NETFLIX  -d 192.168.1.1 -j RETURN
iptables -t nat -A NETFLIX  -p udp  -j REDIRECT --to-ports 5300
iptables -t nat -I PREROUTING -p udp --dport 53 -j NETFLIX

# fix time server
iptables -t nat -N TIMER
iptables -t nat -A TIMER  -d 192.168.1.1 -j RETURN
iptables -t nat -A TIMER  -p udp  -j REDIRECT --to-ports 123
iptables -t nat -I PREROUTING -p udp --dport 123 -j TIMER

exit 0
